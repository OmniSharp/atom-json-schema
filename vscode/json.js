'use strict';
//# sourceMappingURL=data:application/json;base64,{"version":3,"sources":["vscode/json.ts"],"names":[],"mappings":"AAIA","file":"vscode/json.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\n\r\n/*import editorCommon from 'vs/editor/common/editorCommon';\r\nimport modes from 'vs/editor/common/modes';\r\nimport URI from './common/uri';\r\nimport Platform from 'vs/platform/platform';\r\nimport jsonWorker from '../jsonWorker';\r\nimport tokenization from '../features/tokenization';\r\nimport {AbstractMode, createWordRegExp, ModeWorkerManager} from 'vs/editor/common/modes/abstractMode';\r\nimport {OneWorkerAttr, AllWorkersAttr} from 'vs/platform/thread/common/threadService';\r\nimport {IThreadService, ThreadAffinity} from 'vs/platform/thread/common/thread';\r\nimport {IJSONContributionRegistry, Extensions, ISchemaContributions} from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\r\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\r\nimport {RichEditSupport} from 'vs/editor/common/modes/supports/richEditSupport';\r\nimport {wireCancellationToken} from './common/async';\r\n\r\nexport class JSONMode extends AbstractMode {\r\n\r\n\tpublic tokenizationSupport: modes.ITokenizationSupport;\r\n\tpublic richEditSupport: modes.IRichEditSupport;\r\n\tpublic configSupport:modes.IConfigurationSupport;\r\n\tpublic inplaceReplaceSupport:modes.IInplaceReplaceSupport;\r\n\r\n\tprivate _modeWorkerManager: ModeWorkerManager<jsonWorker.JSONWorker>;\r\n\tprivate _threadService:IThreadService;\r\n\r\n\tconstructor(\r\n\t\tdescriptor:modes.IModeDescriptor,\r\n\t\t@IInstantiationService instantiationService: IInstantiationService,\r\n\t\t@IThreadService threadService: IThreadService\r\n\t) {\r\n\t\tsuper(descriptor.id);\r\n\t\tthis._modeWorkerManager = new ModeWorkerManager<jsonWorker.JSONWorker>(descriptor, '../jsonWorker', 'JSONWorker', null, instantiationService);\r\n\t\tthis._threadService = threadService;\r\n\r\n\t\tthis.tokenizationSupport = tokenization.createTokenizationSupport(this, true);\r\n\r\n\t\tthis.richEditSupport = new RichEditSupport(this.getId(), null, {\r\n\r\n\t\t\twordPattern: createWordRegExp('.-'),\r\n\r\n\t\t\tcomments: {\r\n\t\t\t\tlineComment: '//',\r\n\t\t\t\tblockComment: ['/*', '/']\r\n\t\t\t},\r\n\r\n\t\t\tbrackets: [\r\n\t\t\t\t['{', '}'],\r\n\t\t\t\t['[', ']']\r\n\t\t\t],\r\n\r\n\t\t\t__characterPairSupport: {\r\n\t\t\t\tautoClosingPairs: [\r\n\t\t\t\t\t{ open: '{', close: '}', notIn: ['string'] },\r\n\t\t\t\t\t{ open: '[', close: ']', notIn: ['string'] },\r\n\t\t\t\t\t{ open: '\"', close: '\"', notIn: ['string'] }\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tmodes.HoverProviderRegistry.register(this.getId(), {\r\n\t\t\tprovideHover: (model, position, token): Promise<modes.Hover> => {\r\n\t\t\t\treturn wireCancellationToken(token, this._provideHover(model.uri, position));\r\n\t\t\t}\r\n\t\t}, true);\r\n\r\n\t\tthis.inplaceReplaceSupport = this;\r\n\r\n\t\tthis.configSupport = this;\r\n\r\n\t\t// Initialize Outline support\r\n\t\tmodes.DocumentSymbolProviderRegistry.register(this.getId(), {\r\n\t\t\tprovideDocumentSymbols: (model, token): Promise<modes.SymbolInformation[]> => {\r\n\t\t\t\treturn wireCancellationToken(token, this._provideDocumentSymbols(model.uri));\r\n\t\t\t}\r\n\t\t}, true);\r\n\r\n\t\tmodes.DocumentFormattingEditProviderRegistry.register(this.getId(), {\r\n\t\t\tprovideDocumentFormattingEdits: (model, options, token): Promise<editorCommon.ISingleEditOperation[]> => {\r\n\t\t\t\treturn wireCancellationToken(token, this._provideDocumentFormattingEdits(model.uri, options));\r\n\t\t\t}\r\n\t\t}, true);\r\n\r\n\t\tmodes.DocumentRangeFormattingEditProviderRegistry.register(this.getId(), {\r\n\t\t\tprovideDocumentRangeFormattingEdits: (model, range, options, token): Promise<editorCommon.ISingleEditOperation[]> => {\r\n\t\t\t\treturn wireCancellationToken(token, this._provideDocumentRangeFormattingEdits(model.uri, range, options));\r\n\t\t\t}\r\n\t\t}, true);\r\n\r\n\t\tmodes.SuggestRegistry.register(this.getId(), {\r\n\t\t\ttriggerCharacters: [],\r\n\t\t\tprovideCompletionItems: (model, position, token): Promise<modes.ISuggestResult[]> => {\r\n\t\t\t\treturn wireCancellationToken(token, this._provideCompletionItems(model.uri, position));\r\n\t\t\t}\r\n\t\t}, true);\r\n\t}\r\n\r\n\tpublic creationDone(): void {\r\n\t\tif (this._threadService.isInMainThread) {\r\n\t\t\t// Pick a worker to do validation\r\n\t\t\tthis._pickAWorkerToValidate();\r\n\r\n\t\t\t// Configure all workers\r\n\t\t\tthis._configureWorkerSchemas(this.getSchemaConfiguration());\r\n\t\t\tvar contributionRegistry = <IJSONContributionRegistry> Platform.Registry.as(Extensions.JSONContribution);\r\n\t\t\tcontributionRegistry.addRegistryChangedListener(e => {\r\n\t\t\t\tthis._configureWorkerSchemas(this.getSchemaConfiguration());\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _worker<T>(runner:(worker:jsonWorker.JSONWorker)=>Promise<T>): Promise<T> {\r\n\t\treturn this._modeWorkerManager.worker(runner);\r\n\t}\r\n\r\n\tprivate getSchemaConfiguration() : ISchemaContributions {\r\n\t\tvar contributionRegistry = <IJSONContributionRegistry> Platform.Registry.as(Extensions.JSONContribution);\r\n\t\treturn contributionRegistry.getSchemaContributions();\r\n\t}\r\n\r\n\tpublic configure(options:any): Promise<void> {\r\n\t\tif (this._threadService.isInMainThread) {\r\n\t\t\treturn this._configureWorkers(options);\r\n\t\t} else {\r\n\t\t\treturn this._worker((w) => w._doConfigure(options));\r\n\t\t}\r\n\t}\r\n\r\n\tstatic $_configureWorkers = AllWorkersAttr(JSONMode, JSONMode.prototype._configureWorkers);\r\n\tprivate _configureWorkers(options:any): Promise<void> {\r\n\t\treturn this._worker((w) => w._doConfigure(options));\r\n\t}\r\n\r\n\tstatic $_configureWorkerSchemas = AllWorkersAttr(JSONMode, JSONMode.prototype._configureWorkerSchemas);\r\n\tprivate _configureWorkerSchemas(data:ISchemaContributions): Promise<boolean> {\r\n\t\treturn this._worker((w) => w.setSchemaContributions(data));\r\n\t}\r\n\r\n\tstatic $_pickAWorkerToValidate = OneWorkerAttr(JSONMode, JSONMode.prototype._pickAWorkerToValidate, ThreadAffinity.Group1);\r\n\tprivate _pickAWorkerToValidate(): Promise<void> {\r\n\t\treturn this._worker((w) => w.enableValidator());\r\n\t}\r\n\r\n\tstatic $navigateValueSet = OneWorkerAttr(JSONMode, JSONMode.prototype.navigateValueSet);\r\n\tpublic navigateValueSet(resource:URI, position:editorCommon.IRange, up:boolean):Promise<modes.IInplaceReplaceSupportResult> {\r\n\t\treturn this._worker((w) => w.navigateValueSet(resource, position, up));\r\n\t}\r\n\r\n\tstatic $_provideCompletionItems = OneWorkerAttr(JSONMode, JSONMode.prototype._provideCompletionItems);\r\n\tprivate _provideCompletionItems(resource:URI, position:editorCommon.IPosition):Promise<modes.ISuggestResult[]> {\r\n\t\treturn this._worker((w) => w.provideCompletionItems(resource, position));\r\n\t}\r\n\r\n\tstatic $_provideHover = OneWorkerAttr(JSONMode, JSONMode.prototype._provideHover);\r\n\tprivate _provideHover(resource:URI, position:editorCommon.IPosition): Promise<modes.Hover> {\r\n\t\treturn this._worker((w) => w.provideHover(resource, position));\r\n\t}\r\n\r\n\tstatic $_provideDocumentSymbols = OneWorkerAttr(JSONMode, JSONMode.prototype._provideDocumentSymbols);\r\n\tprivate _provideDocumentSymbols(resource:URI):Promise<modes.SymbolInformation[]> {\r\n\t\treturn this._worker((w) => w.provideDocumentSymbols(resource));\r\n\t}\r\n\r\n\tstatic $_provideDocumentFormattingEdits = OneWorkerAttr(JSONMode, JSONMode.prototype._provideDocumentFormattingEdits);\r\n\tpublic _provideDocumentFormattingEdits(resource:URI, options:modes.IFormattingOptions):Promise<editorCommon.ISingleEditOperation[]> {\r\n\t\treturn this._worker((w) => w.format(resource, null, options));\r\n\t}\r\n\r\n\tstatic $_provideDocumentRangeFormattingEdits = OneWorkerAttr(JSONMode, JSONMode.prototype._provideDocumentRangeFormattingEdits);\r\n\tpublic _provideDocumentRangeFormattingEdits(resource:URI, range:editorCommon.IRange, options:modes.IFormattingOptions):Promise<editorCommon.ISingleEditOperation[]> {\r\n\t\treturn this._worker((w) => w.format(resource, range, options));\r\n\t}\r\n}\r\n*/"],"sourceRoot":"/source/"}
